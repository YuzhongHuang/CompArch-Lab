$date
	Thu Oct 15 18:15:52 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! carryout $end
$var wire 32 " out [31:0] $end
$var wire 1 # overflow $end
$var wire 1 $ zero $end
$var reg 3 % ALUCommand [2:0] $end
$var reg 32 & a [31:0] $end
$var reg 32 ' b [31:0] $end
$scope module alu $end
$var wire 3 ( ALUCommand [2:0] $end
$var wire 7 ) LutResults [6:0] $end
$var wire 32 * a [31:0] $end
$var wire 32 + b [31:0] $end
$var wire 1 , carryout $end
$var wire 32 - inputB [31:0] $end
$var wire 32 . out [31:0] $end
$var wire 1 / overflow $end
$var wire 32 0 resAnd [31:0] $end
$var wire 32 1 resOr [31:0] $end
$var wire 1 2 resSLT $end
$var wire 32 3 resSum [31:0] $end
$var wire 32 4 resXor [31:0] $end
$var wire 32 5 tempAnd [31:0] $end
$var wire 32 6 tempOr [31:0] $end
$var wire 32 7 validAnd [31:0] $end
$var wire 1 ! validCarryOut $end
$var wire 32 8 validOr [31:0] $end
$var wire 1 # validOverflow $end
$var wire 1 9 validSLT $end
$var wire 32 : validSum [31:0] $end
$var wire 32 ; validXor [31:0] $end
$var wire 1 $ zero $end
$scope module luTable $end
$var wire 3 < ALUcommand [2:0] $end
$var reg 7 = ALUsignal [6:0] $end
$upscope $end
$scope module flipB $end
$var wire 32 > a [31:0] $end
$var wire 1 ? b $end
$var wire 32 @ res [31:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk01 $end
$upscope $end
$scope begin genblk001 $end
$upscope $end
$scope begin genblk0001 $end
$upscope $end
$scope begin genblk00001 $end
$upscope $end
$scope begin genblk000001 $end
$upscope $end
$scope begin genblk0000001 $end
$upscope $end
$scope begin genblk00000001 $end
$upscope $end
$scope begin genblk000000001 $end
$upscope $end
$scope begin genblk0000000001 $end
$upscope $end
$scope begin genblk00000000001 $end
$upscope $end
$scope begin genblk000000000001 $end
$upscope $end
$scope begin genblk0000000000001 $end
$upscope $end
$scope begin genblk00000000000001 $end
$upscope $end
$scope begin genblk000000000000001 $end
$upscope $end
$scope begin genblk0000000000000001 $end
$upscope $end
$scope begin genblk00000000000000001 $end
$upscope $end
$scope begin genblk000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000000001 $end
$upscope $end
$scope begin $gen1[25] $end
$upscope $end
$scope begin $gen1[26] $end
$upscope $end
$scope begin $gen1[27] $end
$upscope $end
$scope begin $gen1[28] $end
$upscope $end
$scope begin $gen1[29] $end
$upscope $end
$scope begin $gen1[30] $end
$upscope $end
$scope begin $gen1[31] $end
$upscope $end
$upscope $end
$scope module xorGate $end
$var wire 32 A a [31:0] $end
$var wire 32 B b [31:0] $end
$var wire 32 C res [31:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk01 $end
$upscope $end
$scope begin genblk001 $end
$upscope $end
$scope begin genblk0001 $end
$upscope $end
$scope begin genblk00001 $end
$upscope $end
$scope begin genblk000001 $end
$upscope $end
$scope begin genblk0000001 $end
$upscope $end
$scope begin genblk00000001 $end
$upscope $end
$scope begin genblk000000001 $end
$upscope $end
$scope begin genblk0000000001 $end
$upscope $end
$scope begin genblk00000000001 $end
$upscope $end
$scope begin genblk000000000001 $end
$upscope $end
$scope begin genblk0000000000001 $end
$upscope $end
$scope begin genblk00000000000001 $end
$upscope $end
$scope begin genblk000000000000001 $end
$upscope $end
$scope begin genblk0000000000000001 $end
$upscope $end
$scope begin genblk00000000000000001 $end
$upscope $end
$scope begin genblk000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000000001 $end
$upscope $end
$scope begin $gen1[25] $end
$upscope $end
$scope begin $gen1[26] $end
$upscope $end
$scope begin $gen1[27] $end
$upscope $end
$scope begin $gen1[28] $end
$upscope $end
$scope begin $gen1[29] $end
$upscope $end
$scope begin $gen1[30] $end
$upscope $end
$scope begin $gen1[31] $end
$upscope $end
$upscope $end
$scope module andGate $end
$var wire 32 D a [31:0] $end
$var wire 32 E b [31:0] $end
$var wire 32 F res [31:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk01 $end
$upscope $end
$scope begin genblk001 $end
$upscope $end
$scope begin genblk0001 $end
$upscope $end
$scope begin genblk00001 $end
$upscope $end
$scope begin genblk000001 $end
$upscope $end
$scope begin genblk0000001 $end
$upscope $end
$scope begin genblk00000001 $end
$upscope $end
$scope begin genblk000000001 $end
$upscope $end
$scope begin genblk0000000001 $end
$upscope $end
$scope begin genblk00000000001 $end
$upscope $end
$scope begin genblk000000000001 $end
$upscope $end
$scope begin genblk0000000000001 $end
$upscope $end
$scope begin genblk00000000000001 $end
$upscope $end
$scope begin genblk000000000000001 $end
$upscope $end
$scope begin genblk0000000000000001 $end
$upscope $end
$scope begin genblk00000000000000001 $end
$upscope $end
$scope begin genblk000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000000001 $end
$upscope $end
$scope begin $gen1[25] $end
$upscope $end
$scope begin $gen1[26] $end
$upscope $end
$scope begin $gen1[27] $end
$upscope $end
$scope begin $gen1[28] $end
$upscope $end
$scope begin $gen1[29] $end
$upscope $end
$scope begin $gen1[30] $end
$upscope $end
$scope begin $gen1[31] $end
$upscope $end
$upscope $end
$scope module flipAndResult $end
$var wire 32 G a [31:0] $end
$var wire 1 H b $end
$var wire 32 I res [31:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk01 $end
$upscope $end
$scope begin genblk001 $end
$upscope $end
$scope begin genblk0001 $end
$upscope $end
$scope begin genblk00001 $end
$upscope $end
$scope begin genblk000001 $end
$upscope $end
$scope begin genblk0000001 $end
$upscope $end
$scope begin genblk00000001 $end
$upscope $end
$scope begin genblk000000001 $end
$upscope $end
$scope begin genblk0000000001 $end
$upscope $end
$scope begin genblk00000000001 $end
$upscope $end
$scope begin genblk000000000001 $end
$upscope $end
$scope begin genblk0000000000001 $end
$upscope $end
$scope begin genblk00000000000001 $end
$upscope $end
$scope begin genblk000000000000001 $end
$upscope $end
$scope begin genblk0000000000000001 $end
$upscope $end
$scope begin genblk00000000000000001 $end
$upscope $end
$scope begin genblk000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000000001 $end
$upscope $end
$scope begin $gen1[25] $end
$upscope $end
$scope begin $gen1[26] $end
$upscope $end
$scope begin $gen1[27] $end
$upscope $end
$scope begin $gen1[28] $end
$upscope $end
$scope begin $gen1[29] $end
$upscope $end
$scope begin $gen1[30] $end
$upscope $end
$scope begin $gen1[31] $end
$upscope $end
$upscope $end
$scope module orGate $end
$var wire 32 J a [31:0] $end
$var wire 32 K b [31:0] $end
$var wire 32 L res [31:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk01 $end
$upscope $end
$scope begin genblk001 $end
$upscope $end
$scope begin genblk0001 $end
$upscope $end
$scope begin genblk00001 $end
$upscope $end
$scope begin genblk000001 $end
$upscope $end
$scope begin genblk0000001 $end
$upscope $end
$scope begin genblk00000001 $end
$upscope $end
$scope begin genblk000000001 $end
$upscope $end
$scope begin genblk0000000001 $end
$upscope $end
$scope begin genblk00000000001 $end
$upscope $end
$scope begin genblk000000000001 $end
$upscope $end
$scope begin genblk0000000000001 $end
$upscope $end
$scope begin genblk00000000000001 $end
$upscope $end
$scope begin genblk000000000000001 $end
$upscope $end
$scope begin genblk0000000000000001 $end
$upscope $end
$scope begin genblk00000000000000001 $end
$upscope $end
$scope begin genblk000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000000001 $end
$upscope $end
$scope begin $gen1[25] $end
$upscope $end
$scope begin $gen1[26] $end
$upscope $end
$scope begin $gen1[27] $end
$upscope $end
$scope begin $gen1[28] $end
$upscope $end
$scope begin $gen1[29] $end
$upscope $end
$scope begin $gen1[30] $end
$upscope $end
$scope begin $gen1[31] $end
$upscope $end
$upscope $end
$scope module flipOrResult $end
$var wire 32 M a [31:0] $end
$var wire 1 N b $end
$var wire 32 O res [31:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk01 $end
$upscope $end
$scope begin genblk001 $end
$upscope $end
$scope begin genblk0001 $end
$upscope $end
$scope begin genblk00001 $end
$upscope $end
$scope begin genblk000001 $end
$upscope $end
$scope begin genblk0000001 $end
$upscope $end
$scope begin genblk00000001 $end
$upscope $end
$scope begin genblk000000001 $end
$upscope $end
$scope begin genblk0000000001 $end
$upscope $end
$scope begin genblk00000000001 $end
$upscope $end
$scope begin genblk000000000001 $end
$upscope $end
$scope begin genblk0000000000001 $end
$upscope $end
$scope begin genblk00000000000001 $end
$upscope $end
$scope begin genblk000000000000001 $end
$upscope $end
$scope begin genblk0000000000000001 $end
$upscope $end
$scope begin genblk00000000000000001 $end
$upscope $end
$scope begin genblk000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000000001 $end
$upscope $end
$scope begin $gen1[25] $end
$upscope $end
$scope begin $gen1[26] $end
$upscope $end
$scope begin $gen1[27] $end
$upscope $end
$scope begin $gen1[28] $end
$upscope $end
$scope begin $gen1[29] $end
$upscope $end
$scope begin $gen1[30] $end
$upscope $end
$scope begin $gen1[31] $end
$upscope $end
$upscope $end
$scope module adder $end
$var wire 32 P a [31:0] $end
$var wire 32 Q b [31:0] $end
$var wire 31 R cOut [30:0] $end
$var wire 1 S carryin $end
$var wire 1 , carryout $end
$var wire 1 / overflow $end
$var wire 32 T sum [31:0] $end
$scope module adderBefore $end
$var wire 1 U a $end
$var wire 1 V a0 $end
$var wire 1 W a1 $end
$var wire 1 X b $end
$var wire 1 S carryin $end
$var wire 1 Y carryout $end
$var wire 1 Z out $end
$var wire 1 [ x0 $end
$upscope $end
$scope module adderAfter $end
$var wire 1 \ a $end
$var wire 1 ] a0 $end
$var wire 1 ^ a1 $end
$var wire 1 _ b $end
$var wire 1 ` carryin $end
$var wire 1 , carryout $end
$var wire 1 a out $end
$var wire 1 b x0 $end
$upscope $end
$scope begin genblk1 $end
$scope module adder $end
$var wire 1 c a $end
$var wire 1 d a0 $end
$var wire 1 e a1 $end
$var wire 1 f b $end
$var wire 1 g carryin $end
$var wire 1 h carryout $end
$var wire 1 i out $end
$var wire 1 j x0 $end
$upscope $end
$upscope $end
$scope begin genblk01 $end
$scope module adder $end
$var wire 1 k a $end
$var wire 1 l a0 $end
$var wire 1 m a1 $end
$var wire 1 n b $end
$var wire 1 o carryin $end
$var wire 1 p carryout $end
$var wire 1 q out $end
$var wire 1 r x0 $end
$upscope $end
$upscope $end
$scope begin genblk001 $end
$scope module adder $end
$var wire 1 s a $end
$var wire 1 t a0 $end
$var wire 1 u a1 $end
$var wire 1 v b $end
$var wire 1 w carryin $end
$var wire 1 x carryout $end
$var wire 1 y out $end
$var wire 1 z x0 $end
$upscope $end
$upscope $end
$scope begin genblk0001 $end
$scope module adder $end
$var wire 1 { a $end
$var wire 1 | a0 $end
$var wire 1 } a1 $end
$var wire 1 ~ b $end
$var wire 1 !" carryin $end
$var wire 1 "" carryout $end
$var wire 1 #" out $end
$var wire 1 $" x0 $end
$upscope $end
$upscope $end
$scope begin genblk00001 $end
$scope module adder $end
$var wire 1 %" a $end
$var wire 1 &" a0 $end
$var wire 1 '" a1 $end
$var wire 1 (" b $end
$var wire 1 )" carryin $end
$var wire 1 *" carryout $end
$var wire 1 +" out $end
$var wire 1 ," x0 $end
$upscope $end
$upscope $end
$scope begin genblk000001 $end
$scope module adder $end
$var wire 1 -" a $end
$var wire 1 ." a0 $end
$var wire 1 /" a1 $end
$var wire 1 0" b $end
$var wire 1 1" carryin $end
$var wire 1 2" carryout $end
$var wire 1 3" out $end
$var wire 1 4" x0 $end
$upscope $end
$upscope $end
$scope begin genblk0000001 $end
$scope module adder $end
$var wire 1 5" a $end
$var wire 1 6" a0 $end
$var wire 1 7" a1 $end
$var wire 1 8" b $end
$var wire 1 9" carryin $end
$var wire 1 :" carryout $end
$var wire 1 ;" out $end
$var wire 1 <" x0 $end
$upscope $end
$upscope $end
$scope begin genblk00000001 $end
$scope module adder $end
$var wire 1 =" a $end
$var wire 1 >" a0 $end
$var wire 1 ?" a1 $end
$var wire 1 @" b $end
$var wire 1 A" carryin $end
$var wire 1 B" carryout $end
$var wire 1 C" out $end
$var wire 1 D" x0 $end
$upscope $end
$upscope $end
$scope begin genblk000000001 $end
$scope module adder $end
$var wire 1 E" a $end
$var wire 1 F" a0 $end
$var wire 1 G" a1 $end
$var wire 1 H" b $end
$var wire 1 I" carryin $end
$var wire 1 J" carryout $end
$var wire 1 K" out $end
$var wire 1 L" x0 $end
$upscope $end
$upscope $end
$scope begin genblk0000000001 $end
$scope module adder $end
$var wire 1 M" a $end
$var wire 1 N" a0 $end
$var wire 1 O" a1 $end
$var wire 1 P" b $end
$var wire 1 Q" carryin $end
$var wire 1 R" carryout $end
$var wire 1 S" out $end
$var wire 1 T" x0 $end
$upscope $end
$upscope $end
$scope begin genblk00000000001 $end
$scope module adder $end
$var wire 1 U" a $end
$var wire 1 V" a0 $end
$var wire 1 W" a1 $end
$var wire 1 X" b $end
$var wire 1 Y" carryin $end
$var wire 1 Z" carryout $end
$var wire 1 [" out $end
$var wire 1 \" x0 $end
$upscope $end
$upscope $end
$scope begin genblk000000000001 $end
$scope module adder $end
$var wire 1 ]" a $end
$var wire 1 ^" a0 $end
$var wire 1 _" a1 $end
$var wire 1 `" b $end
$var wire 1 a" carryin $end
$var wire 1 b" carryout $end
$var wire 1 c" out $end
$var wire 1 d" x0 $end
$upscope $end
$upscope $end
$scope begin genblk0000000000001 $end
$scope module adder $end
$var wire 1 e" a $end
$var wire 1 f" a0 $end
$var wire 1 g" a1 $end
$var wire 1 h" b $end
$var wire 1 i" carryin $end
$var wire 1 j" carryout $end
$var wire 1 k" out $end
$var wire 1 l" x0 $end
$upscope $end
$upscope $end
$scope begin genblk00000000000001 $end
$scope module adder $end
$var wire 1 m" a $end
$var wire 1 n" a0 $end
$var wire 1 o" a1 $end
$var wire 1 p" b $end
$var wire 1 q" carryin $end
$var wire 1 r" carryout $end
$var wire 1 s" out $end
$var wire 1 t" x0 $end
$upscope $end
$upscope $end
$scope begin genblk000000000000001 $end
$scope module adder $end
$var wire 1 u" a $end
$var wire 1 v" a0 $end
$var wire 1 w" a1 $end
$var wire 1 x" b $end
$var wire 1 y" carryin $end
$var wire 1 z" carryout $end
$var wire 1 {" out $end
$var wire 1 |" x0 $end
$upscope $end
$upscope $end
$scope begin genblk0000000000000001 $end
$scope module adder $end
$var wire 1 }" a $end
$var wire 1 ~" a0 $end
$var wire 1 !# a1 $end
$var wire 1 "# b $end
$var wire 1 ## carryin $end
$var wire 1 $# carryout $end
$var wire 1 %# out $end
$var wire 1 &# x0 $end
$upscope $end
$upscope $end
$scope begin genblk00000000000000001 $end
$scope module adder $end
$var wire 1 '# a $end
$var wire 1 (# a0 $end
$var wire 1 )# a1 $end
$var wire 1 *# b $end
$var wire 1 +# carryin $end
$var wire 1 ,# carryout $end
$var wire 1 -# out $end
$var wire 1 .# x0 $end
$upscope $end
$upscope $end
$scope begin genblk000000000000000001 $end
$scope module adder $end
$var wire 1 /# a $end
$var wire 1 0# a0 $end
$var wire 1 1# a1 $end
$var wire 1 2# b $end
$var wire 1 3# carryin $end
$var wire 1 4# carryout $end
$var wire 1 5# out $end
$var wire 1 6# x0 $end
$upscope $end
$upscope $end
$scope begin genblk0000000000000000001 $end
$scope module adder $end
$var wire 1 7# a $end
$var wire 1 8# a0 $end
$var wire 1 9# a1 $end
$var wire 1 :# b $end
$var wire 1 ;# carryin $end
$var wire 1 <# carryout $end
$var wire 1 =# out $end
$var wire 1 ># x0 $end
$upscope $end
$upscope $end
$scope begin genblk00000000000000000001 $end
$scope module adder $end
$var wire 1 ?# a $end
$var wire 1 @# a0 $end
$var wire 1 A# a1 $end
$var wire 1 B# b $end
$var wire 1 C# carryin $end
$var wire 1 D# carryout $end
$var wire 1 E# out $end
$var wire 1 F# x0 $end
$upscope $end
$upscope $end
$scope begin genblk000000000000000000001 $end
$scope module adder $end
$var wire 1 G# a $end
$var wire 1 H# a0 $end
$var wire 1 I# a1 $end
$var wire 1 J# b $end
$var wire 1 K# carryin $end
$var wire 1 L# carryout $end
$var wire 1 M# out $end
$var wire 1 N# x0 $end
$upscope $end
$upscope $end
$scope begin genblk0000000000000000000001 $end
$scope module adder $end
$var wire 1 O# a $end
$var wire 1 P# a0 $end
$var wire 1 Q# a1 $end
$var wire 1 R# b $end
$var wire 1 S# carryin $end
$var wire 1 T# carryout $end
$var wire 1 U# out $end
$var wire 1 V# x0 $end
$upscope $end
$upscope $end
$scope begin genblk00000000000000000000001 $end
$scope module adder $end
$var wire 1 W# a $end
$var wire 1 X# a0 $end
$var wire 1 Y# a1 $end
$var wire 1 Z# b $end
$var wire 1 [# carryin $end
$var wire 1 \# carryout $end
$var wire 1 ]# out $end
$var wire 1 ^# x0 $end
$upscope $end
$upscope $end
$scope begin genblk000000000000000000000001 $end
$scope module adder $end
$var wire 1 _# a $end
$var wire 1 `# a0 $end
$var wire 1 a# a1 $end
$var wire 1 b# b $end
$var wire 1 c# carryin $end
$var wire 1 d# carryout $end
$var wire 1 e# out $end
$var wire 1 f# x0 $end
$upscope $end
$upscope $end
$scope begin genblk0000000000000000000000001 $end
$scope module adder $end
$var wire 1 g# a $end
$var wire 1 h# a0 $end
$var wire 1 i# a1 $end
$var wire 1 j# b $end
$var wire 1 k# carryin $end
$var wire 1 l# carryout $end
$var wire 1 m# out $end
$var wire 1 n# x0 $end
$upscope $end
$upscope $end
$scope begin $gen1[26] $end
$scope module adder $end
$var wire 1 o# a $end
$var wire 1 p# a0 $end
$var wire 1 q# a1 $end
$var wire 1 r# b $end
$var wire 1 s# carryin $end
$var wire 1 t# carryout $end
$var wire 1 u# out $end
$var wire 1 v# x0 $end
$upscope $end
$upscope $end
$scope begin $gen1[27] $end
$scope module adder $end
$var wire 1 w# a $end
$var wire 1 x# a0 $end
$var wire 1 y# a1 $end
$var wire 1 z# b $end
$var wire 1 {# carryin $end
$var wire 1 |# carryout $end
$var wire 1 }# out $end
$var wire 1 ~# x0 $end
$upscope $end
$upscope $end
$scope begin $gen1[28] $end
$scope module adder $end
$var wire 1 !$ a $end
$var wire 1 "$ a0 $end
$var wire 1 #$ a1 $end
$var wire 1 $$ b $end
$var wire 1 %$ carryin $end
$var wire 1 &$ carryout $end
$var wire 1 '$ out $end
$var wire 1 ($ x0 $end
$upscope $end
$upscope $end
$scope begin $gen1[29] $end
$scope module adder $end
$var wire 1 )$ a $end
$var wire 1 *$ a0 $end
$var wire 1 +$ a1 $end
$var wire 1 ,$ b $end
$var wire 1 -$ carryin $end
$var wire 1 .$ carryout $end
$var wire 1 /$ out $end
$var wire 1 0$ x0 $end
$upscope $end
$upscope $end
$scope begin $gen1[30] $end
$scope module adder $end
$var wire 1 1$ a $end
$var wire 1 2$ a0 $end
$var wire 1 3$ a1 $end
$var wire 1 4$ b $end
$var wire 1 5$ carryin $end
$var wire 1 6$ carryout $end
$var wire 1 7$ out $end
$var wire 1 8$ x0 $end
$upscope $end
$upscope $end
$upscope $end
$scope module enableSum $end
$var wire 32 9$ a [31:0] $end
$var wire 1 :$ b $end
$var wire 32 ;$ res [31:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk01 $end
$upscope $end
$scope begin genblk001 $end
$upscope $end
$scope begin genblk0001 $end
$upscope $end
$scope begin genblk00001 $end
$upscope $end
$scope begin genblk000001 $end
$upscope $end
$scope begin genblk0000001 $end
$upscope $end
$scope begin genblk00000001 $end
$upscope $end
$scope begin genblk000000001 $end
$upscope $end
$scope begin genblk0000000001 $end
$upscope $end
$scope begin genblk00000000001 $end
$upscope $end
$scope begin genblk000000000001 $end
$upscope $end
$scope begin genblk0000000000001 $end
$upscope $end
$scope begin genblk00000000000001 $end
$upscope $end
$scope begin genblk000000000000001 $end
$upscope $end
$scope begin genblk0000000000000001 $end
$upscope $end
$scope begin genblk00000000000000001 $end
$upscope $end
$scope begin genblk000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000000001 $end
$upscope $end
$scope begin $gen1[25] $end
$upscope $end
$scope begin $gen1[26] $end
$upscope $end
$scope begin $gen1[27] $end
$upscope $end
$scope begin $gen1[28] $end
$upscope $end
$scope begin $gen1[29] $end
$upscope $end
$scope begin $gen1[30] $end
$upscope $end
$scope begin $gen1[31] $end
$upscope $end
$upscope $end
$scope module enableXor $end
$var wire 32 <$ a [31:0] $end
$var wire 1 =$ b $end
$var wire 32 >$ res [31:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk01 $end
$upscope $end
$scope begin genblk001 $end
$upscope $end
$scope begin genblk0001 $end
$upscope $end
$scope begin genblk00001 $end
$upscope $end
$scope begin genblk000001 $end
$upscope $end
$scope begin genblk0000001 $end
$upscope $end
$scope begin genblk00000001 $end
$upscope $end
$scope begin genblk000000001 $end
$upscope $end
$scope begin genblk0000000001 $end
$upscope $end
$scope begin genblk00000000001 $end
$upscope $end
$scope begin genblk000000000001 $end
$upscope $end
$scope begin genblk0000000000001 $end
$upscope $end
$scope begin genblk00000000000001 $end
$upscope $end
$scope begin genblk000000000000001 $end
$upscope $end
$scope begin genblk0000000000000001 $end
$upscope $end
$scope begin genblk00000000000000001 $end
$upscope $end
$scope begin genblk000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000000001 $end
$upscope $end
$scope begin $gen1[25] $end
$upscope $end
$scope begin $gen1[26] $end
$upscope $end
$scope begin $gen1[27] $end
$upscope $end
$scope begin $gen1[28] $end
$upscope $end
$scope begin $gen1[29] $end
$upscope $end
$scope begin $gen1[30] $end
$upscope $end
$scope begin $gen1[31] $end
$upscope $end
$upscope $end
$scope module enableAND $end
$var wire 32 ?$ a [31:0] $end
$var wire 1 @$ b $end
$var wire 32 A$ res [31:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk01 $end
$upscope $end
$scope begin genblk001 $end
$upscope $end
$scope begin genblk0001 $end
$upscope $end
$scope begin genblk00001 $end
$upscope $end
$scope begin genblk000001 $end
$upscope $end
$scope begin genblk0000001 $end
$upscope $end
$scope begin genblk00000001 $end
$upscope $end
$scope begin genblk000000001 $end
$upscope $end
$scope begin genblk0000000001 $end
$upscope $end
$scope begin genblk00000000001 $end
$upscope $end
$scope begin genblk000000000001 $end
$upscope $end
$scope begin genblk0000000000001 $end
$upscope $end
$scope begin genblk00000000000001 $end
$upscope $end
$scope begin genblk000000000000001 $end
$upscope $end
$scope begin genblk0000000000000001 $end
$upscope $end
$scope begin genblk00000000000000001 $end
$upscope $end
$scope begin genblk000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000000001 $end
$upscope $end
$scope begin $gen1[25] $end
$upscope $end
$scope begin $gen1[26] $end
$upscope $end
$scope begin $gen1[27] $end
$upscope $end
$scope begin $gen1[28] $end
$upscope $end
$scope begin $gen1[29] $end
$upscope $end
$scope begin $gen1[30] $end
$upscope $end
$scope begin $gen1[31] $end
$upscope $end
$upscope $end
$scope module enableOR $end
$var wire 32 B$ a [31:0] $end
$var wire 1 C$ b $end
$var wire 32 D$ res [31:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk01 $end
$upscope $end
$scope begin genblk001 $end
$upscope $end
$scope begin genblk0001 $end
$upscope $end
$scope begin genblk00001 $end
$upscope $end
$scope begin genblk000001 $end
$upscope $end
$scope begin genblk0000001 $end
$upscope $end
$scope begin genblk00000001 $end
$upscope $end
$scope begin genblk000000001 $end
$upscope $end
$scope begin genblk0000000001 $end
$upscope $end
$scope begin genblk00000000001 $end
$upscope $end
$scope begin genblk000000000001 $end
$upscope $end
$scope begin genblk0000000000001 $end
$upscope $end
$scope begin genblk00000000000001 $end
$upscope $end
$scope begin genblk000000000000001 $end
$upscope $end
$scope begin genblk0000000000000001 $end
$upscope $end
$scope begin genblk00000000000000001 $end
$upscope $end
$scope begin genblk000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000000001 $end
$upscope $end
$scope begin $gen1[25] $end
$upscope $end
$scope begin $gen1[26] $end
$upscope $end
$scope begin $gen1[27] $end
$upscope $end
$scope begin $gen1[28] $end
$upscope $end
$scope begin $gen1[29] $end
$upscope $end
$scope begin $gen1[30] $end
$upscope $end
$scope begin $gen1[31] $end
$upscope $end
$upscope $end
$scope module chooseOutput $end
$var wire 32 E$ a [31:0] $end
$var wire 32 F$ b [31:0] $end
$var wire 32 G$ c [31:0] $end
$var wire 32 H$ d [31:0] $end
$var wire 1 9 e $end
$var wire 32 I$ res [31:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk01 $end
$upscope $end
$scope begin genblk001 $end
$upscope $end
$scope begin genblk0001 $end
$upscope $end
$scope begin genblk00001 $end
$upscope $end
$scope begin genblk000001 $end
$upscope $end
$scope begin genblk0000001 $end
$upscope $end
$scope begin genblk00000001 $end
$upscope $end
$scope begin genblk000000001 $end
$upscope $end
$scope begin genblk0000000001 $end
$upscope $end
$scope begin genblk00000000001 $end
$upscope $end
$scope begin genblk000000000001 $end
$upscope $end
$scope begin genblk0000000000001 $end
$upscope $end
$scope begin genblk00000000000001 $end
$upscope $end
$scope begin genblk000000000000001 $end
$upscope $end
$scope begin genblk0000000000000001 $end
$upscope $end
$scope begin genblk00000000000000001 $end
$upscope $end
$scope begin genblk000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000001 $end
$upscope $end
$scope begin genblk00000000000000000000001 $end
$upscope $end
$scope begin genblk000000000000000000000001 $end
$upscope $end
$scope begin genblk0000000000000000000000001 $end
$upscope $end
$scope begin $gen1[25] $end
$upscope $end
$scope begin $gen1[26] $end
$upscope $end
$scope begin $gen1[27] $end
$upscope $end
$scope begin $gen1[28] $end
$upscope $end
$scope begin $gen1[29] $end
$upscope $end
$scope begin $gen1[30] $end
$upscope $end
$scope begin $gen1[31] $end
$upscope $end
$upscope $end
$scope module zeroOutput $end
$var wire 32 J$ Result [31:0] $end
$var wire 1 K$ result1 $end
$var wire 4 L$ result10 [3:0] $end
$var wire 1 M$ result11 $end
$var wire 1 N$ result12 $end
$var wire 1 O$ result2 $end
$var wire 1 P$ result3 $end
$var wire 1 Q$ result4 $end
$var wire 1 R$ result5 $end
$var wire 1 S$ result6 $end
$var wire 1 T$ result7 $end
$var wire 1 U$ result8 $end
$var wire 4 V$ result9 [3:0] $end
$var wire 1 $ zero $end
$var wire 1 W$ zero_before $end
$scope module or_4_1 $end
$var wire 4 X$ input4bit [3:0] $end
$var wire 1 Y$ re1 $end
$var wire 1 Z$ re2 $end
$var wire 1 K$ res $end
$upscope $end
$scope module or_4_2 $end
$var wire 4 [$ input4bit [3:0] $end
$var wire 1 \$ re1 $end
$var wire 1 ]$ re2 $end
$var wire 1 O$ res $end
$upscope $end
$scope module or_4_3 $end
$var wire 4 ^$ input4bit [3:0] $end
$var wire 1 _$ re1 $end
$var wire 1 `$ re2 $end
$var wire 1 P$ res $end
$upscope $end
$scope module or_4_4 $end
$var wire 4 a$ input4bit [3:0] $end
$var wire 1 b$ re1 $end
$var wire 1 c$ re2 $end
$var wire 1 Q$ res $end
$upscope $end
$scope module or_4_5 $end
$var wire 4 d$ input4bit [3:0] $end
$var wire 1 e$ re1 $end
$var wire 1 f$ re2 $end
$var wire 1 R$ res $end
$upscope $end
$scope module or_4_6 $end
$var wire 4 g$ input4bit [3:0] $end
$var wire 1 h$ re1 $end
$var wire 1 i$ re2 $end
$var wire 1 S$ res $end
$upscope $end
$scope module or_4_7 $end
$var wire 4 j$ input4bit [3:0] $end
$var wire 1 k$ re1 $end
$var wire 1 l$ re2 $end
$var wire 1 T$ res $end
$upscope $end
$scope module or_4_8 $end
$var wire 4 m$ input4bit [3:0] $end
$var wire 1 n$ re1 $end
$var wire 1 o$ re2 $end
$var wire 1 U$ res $end
$upscope $end
$scope module or_4_9 $end
$var wire 4 p$ input4bit [3:0] $end
$var wire 1 q$ re1 $end
$var wire 1 r$ re2 $end
$var wire 1 M$ res $end
$upscope $end
$scope module or_4_10 $end
$var wire 4 s$ input4bit [3:0] $end
$var wire 1 t$ re1 $end
$var wire 1 u$ re2 $end
$var wire 1 N$ res $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xu$
xt$
bx s$
xr$
xq$
bx p$
xo$
xn$
bx m$
xl$
xk$
bx j$
xi$
xh$
bx g$
xf$
xe$
bx d$
xc$
xb$
bx a$
x`$
x_$
bx ^$
x]$
x\$
bx [$
xZ$
xY$
bx X$
xW$
bx V$
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
bx L$
xK$
bx J$
bx I$
bx H$
bx G$
bx F$
bx E$
bx D$
0C$
bx B$
bx A$
0@$
bx ?$
bx >$
0=$
bx <$
bx ;$
1:$
bx 9$
x8$
x7$
x6$
x5$
x4$
z3$
x2$
01$
x0$
x/$
x.$
x-$
x,$
z+$
x*$
0)$
x($
x'$
x&$
x%$
x$$
z#$
x"$
0!$
x~#
x}#
x|#
x{#
xz#
zy#
xx#
0w#
xv#
xu#
xt#
xs#
xr#
zq#
xp#
0o#
xn#
xm#
xl#
xk#
xj#
zi#
xh#
0g#
xf#
xe#
xd#
xc#
xb#
za#
x`#
0_#
x^#
x]#
x\#
x[#
xZ#
zY#
xX#
0W#
xV#
xU#
xT#
xS#
xR#
zQ#
xP#
0O#
xN#
xM#
xL#
xK#
xJ#
zI#
xH#
0G#
xF#
xE#
xD#
xC#
xB#
zA#
x@#
0?#
x>#
x=#
x<#
x;#
x:#
z9#
x8#
07#
x6#
x5#
x4#
x3#
x2#
z1#
x0#
0/#
x.#
x-#
x,#
x+#
x*#
z)#
x(#
0'#
x&#
x%#
x$#
x##
x"#
z!#
x~"
0}"
x|"
x{"
xz"
xy"
xx"
zw"
xv"
0u"
xt"
xs"
xr"
xq"
xp"
zo"
xn"
0m"
xl"
xk"
xj"
xi"
xh"
zg"
xf"
0e"
xd"
xc"
xb"
xa"
x`"
z_"
x^"
0]"
x\"
x["
xZ"
xY"
xX"
zW"
xV"
0U"
xT"
xS"
xR"
xQ"
xP"
zO"
xN"
0M"
xL"
xK"
xJ"
xI"
xH"
zG"
xF"
0E"
xD"
xC"
xB"
xA"
x@"
z?"
x>"
0="
x<"
x;"
x:"
x9"
x8"
z7"
x6"
05"
x4"
x3"
x2"
x1"
x0"
z/"
x."
0-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
1%"
x$"
x#"
x""
x!"
x~
z}
x|
0{
xz
xy
xx
xw
xv
zu
xt
0s
xr
xq
xp
xo
xn
xm
xl
1k
xj
xi
xh
xg
xf
xe
xd
1c
xb
xa
x`
x_
z^
x]
0\
x[
xZ
xY
xX
xW
xV
1U
bx T
0S
bx R
bx Q
b100111 P
bx O
0N
bxzxxzzz M
bxzxxzzz L
bx K
b100111 J
bx I
0H
bzxzzxxx G
bzxzzxxx F
bx E
b100111 D
bx C
bx B
b100111 A
bx @
0?
b100111 >
b1000000 =
b0 <
bx ;
bx :
x9
bx 8
bx 7
bxzxxzzz 6
bzxzzxxx 5
bx 4
bx 3
x2
bx 1
bx 0
x/
bx .
b100111 -
x,
bx +
b100111 *
b1000000 )
b0 (
b100111 '
b100111 &
b0 %
x$
x#
bx "
x!
$end
#10
09
0V
03$
0+$
0#$
0y#
0q#
0i#
0a#
0Y#
0Q#
0I#
0A#
09#
01#
0)#
0!#
0w"
0o"
0g"
0_"
0W"
0O"
0G"
0?"
07"
0/"
0}
0u
0^
#320
1X
1f
1n
0v
0~
1("
00"
08"
0@"
0H"
0P"
0X"
0`"
0h"
0p"
0x"
0"#
0*#
02#
0:#
0B#
0J#
0R#
0Z#
0b#
0j#
0r#
0z#
0$$
0,$
04$
0_
b100111 +
b100111 @
b100111 B
b100111 E
b100111 K
b100111 Q
b0 8
b0 D$
b0 H$
b0 7
b0 A$
b0 G$
b0 ;
b0 >$
b0 F$
bx1xx111 6
bx1xx111 L
bx1xx111 M
b0x00xxx 5
b0x00xxx F
b0x00xxx G
#330
0[
1W
0j
1e
0r
1m
0z
0$"
0,"
1'"
04"
0<"
0D"
0L"
0T"
0\"
0d"
0l"
0t"
0|"
0&#
0.#
06#
0>#
0F#
0N#
0V#
0^#
0f#
0n#
0v#
0~#
0($
00$
08$
0b
#340
1g
1o
1w
11"
0Z
bx0 3
bx0 T
bx0 9$
1Y
0d
1h
0l
1p
0t
0|
0&"
1*"
bx1xx111 R
0."
06"
0>"
0F"
0N"
0V"
0^"
0f"
0n"
0v"
0~"
0(#
00#
08#
0@#
0H#
0P#
0X#
0`#
0h#
0p#
0x#
0"$
0*$
02$
0]
#350
0!"
0)"
09"
0A"
0I"
0Q"
0Y"
0a"
0i"
0q"
0y"
0##
0+#
03#
0;#
0C#
0K#
0S#
0[#
0c#
0k#
0s#
0{#
0%$
0-$
05$
0`
1i
1q
1y
13"
bx1xx1110 3
bx1xx1110 T
bx1xx1110 9$
0x
0""
02"
0:"
0B"
0J"
0R"
0Z"
0b"
0j"
0r"
0z"
0$#
0,#
04#
0<#
0D#
0L#
0T#
0\#
0d#
0l#
0t#
0|#
0&$
0.$
06$
b100111 R
0,
#360
0#"
0+"
0;"
0C"
0K"
0S"
0["
0c"
0k"
0s"
0{"
0%#
0-#
05#
0=#
0E#
0M#
0U#
0]#
0e#
0m#
0u#
0}#
0'$
0/$
07$
0a
b1001110 3
b1001110 T
b1001110 9$
0/
0!
#370
02
0#
#640
b100111 5
b100111 F
b100111 G
b0 4
b0 C
b0 <$
b100111 6
b100111 L
b100111 M
bx1xx111 1
bx1xx111 O
bx1xx111 B$
b0x00xxx 0
b0x00xxx I
b0x00xxx ?$
#660
bx0 :
bx0 ;$
bx0 E$
#670
bx1xx1110 :
bx1xx1110 ;$
bx1xx1110 E$
#680
b1001110 :
b1001110 ;$
b1001110 E$
#960
b100111 0
b100111 I
b100111 ?$
b100111 1
b100111 O
b100111 B$
#980
bx0 m$
bx0 "
bx0 .
bx0 I$
bx0 J$
#990
0$
1W$
1N$
1t$
1U$
1T$
bx11 L$
bx11 s$
1n$
1o$
1l$
b1110 m$
bx1xx j$
bx1xx1110 "
bx1xx1110 .
bx1xx1110 I$
bx1xx1110 J$
#1000
0M$
0u$
0q$
0r$
0S$
0R$
b11 L$
b11 s$
0Q$
0P$
0O$
0K$
b0 V$
b0 p$
0k$
0h$
0i$
0e$
0f$
0b$
0c$
0_$
0`$
0\$
0]$
0Y$
0Z$
b100 j$
b0 g$
b0 d$
b0 a$
b0 ^$
b0 [$
b0 X$
b1001110 "
b1001110 .
b1001110 I$
b1001110 J$
#1500

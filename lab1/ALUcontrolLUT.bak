`define ADD  3'd0
`define SUB  3'd1
`define XOR  3'd2
`define SLT  3'd3
`define AND  3'd4
`define NAND 3'd5
`define OR   3'd6
`define NOR  3'd7

module ALUcontrolLUT
(
output reg[6:0] ALUsignal,
input[2:0] ALUcommand
)

  always @(ALUcommand) begin
    case (ALUcommand)
      `ADD:  begin ALUsignal = 0; end    
      `SUB:  begin ALUsignal = 2; end
      `XOR:  begin ALUsignal = 0; end    
      `SLT:  begin ALUsignal = 2; end
      `AND:  begin ALUsignal = 0; end    
      `NAND: begin ALUsignal = 1; end
      `OR:   begin ALUsignal = 0; end    
      `NOR:  begin ALUsignal = 1; end
    endcase
  end
endmodule
